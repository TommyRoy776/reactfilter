{"version":3,"sources":["logo.svg","parts/card.js","parts/dataSet.js","App.js","serviceWorker.js","test.js","parts/progress.js","parts/testData.js","parts/filter.js","index.js"],"names":["module","exports","Card","setData","id","text","age","power","motor","Component","MyButton","variant","value","this","props","onClick","handleClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","testData","Filter","filteredCollected","collectedTrueKeys","headlessMode","brushlessMotor","foldable","speed","passingTags","key","push","setState","collected","allFilterClickListener","e","filterProp","target","dataset","name","prevState","classList","contains","remove","add","changeTable","multiPropsFilter","products","filters","filterKeys","Object","keys","toString","filter","product","every","length","Array","isArray","some","keyEle","includes","searchProducts","toLowerCase","search","inputTerm","tableData","generateButton","changeTags","stateCopy","assign","a","x","data","selectButton","chosen","document","getElementById","innerHTML","container","btn","createElement","onclick","appendChild","collectedOptions","hasOwnProperty","sort","y","b","showState","true","false","100","200","300","400","renderItems","bind","reset","item","i","for","class","role","aria-label","type","striped","bordered","hover","size","map","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cb5c0ac8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\nfunction Card(props){\r\n    console.log(props);\r\n    return(\r\n        <div>\r\n            <h3>{props.id}</h3>\r\n            <p>{props.text}</p>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Card;","const setData = [\r\n    {\r\n        id: 1, text: \"DJI\", age: 3, power: 111, motor: true\r\n    },\r\n    {\r\n        id: 2, text: \"HolyStone\", age : 11 , power: 17, motor: false\r\n    },\r\n\r\n    {\r\n        id:3, text: \"JJRC\", age : 20 , power: 68, motor: true\r\n    },\r\n    {\r\n        id:4, text: \"Potensic\", age : 36 , power: 37, motor: false\r\n    }\r\n\r\n]\r\n\r\nexport default setData","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MainContent from './MainContent';\nimport Footer from './Footer';\nimport Header from './Header';\nimport './myApp.css';\nimport Card from './parts/card';\nimport setData from './parts/dataSet';\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nfunction App() {\n  var num = 0;\n  function clickHandle(){\n    num = 6; \n  }\n   const output = setData.map(data => {\n      if(data.id>1){\n       return <Card key={data.id} id={data.id} text={data.text}/>\n      }\n    })\n  return (\n    <div>\n      <Header/>\n      <input type =\"number\" id=\"num\" name=\"num\"></input>\n      <ReactBootStrap.Button variant=\"outline-primary\">Primary</ReactBootStrap.Button>\n      {output}\n      <MainContent/>\n      <Footer/>\n    </div>\n  );\n}\n\n/*const renderItems = (item,i) => {\n  return(\n    <tr key={i}>\n      <td>{item.id}</td>\n      <td>{item.text}</td>\n    </tr>\n  )\n}*/\n\nclass AppC extends Component{\n  constructor(){\n    super()\n    this.state = {\n      name:\"ABC\",\n      age: null,\n      data: null,\n      value: 0,\n      isBrushless: 2\n    }\n    this.renderItems = this.renderItems.bind(this)\n    this.changeTable = this.changeTable.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n \n  }\n\nrenderItems(item,i){\n  if(item.power>this.state.value){return(\n      <tr key={i}>\n        <td>{item.id}</td>\n        <td>{item.text}</td>\n        <td>{item.power}</td>\n        <td>{item.motor.toString()}</td>\n      </tr>\n    )}\n  }\n\n  changeTable = e => {\n    e.preventDefault();\n    this.setState({ value: this.textInput.value})\n    console.log(this.state.value)\n  };\n\n  changeMotor = e =>{\n    e.preventDefault();\n    if(this.state.isBrushless === 0 || this.state.isBrushless === 1){\n      this.setState({ isBrushless: 2})\n    }else{\n    this.setState({ isBrushless: parseInt(e.target.value)})\n    }\n    console.log(this.state.isBrushless)\n  \n  }\n\n  handleChange(e){\n    this.setState({value:e.target.value})\n  }\n\n  \n \n  render(){\n    return(\n      <div>\n        { /*<h1>{this.state.name}</h1> */}\n       {/* <h3>{this.state.age} years old</h3>\n        <button onClick={()=>{this.setState(prevState =>{\n          return{age:prevState.age+1}\n          }\n         )\n        }}>\n          Click\n      </button> */}\n     <center><h1>Drone Filter</h1></center> \n       <label for=\"fname\">power</label>\n        <input type=\"number\" /*onChange={ this.handleChange }*/ ref={e => this.textInput = e} ></input>\n        <button onClick={this.changeTable}>Table</button><br/>\n        <label for=\"fname\">Brushless motor</label>\n       {this.state.isBrushless === 1 ? null :  <MyButton text=\"Yes\"  handleClick={this.changeMotor} value={0}/>  }\n       {this.state.isBrushless === 0 ? null : <MyButton text=\"No\"  handleClick={this.changeMotor} value={1}/>}\n     \n <ReactBootStrap.Table striped bordered hover size=\"sm\">\n  <thead>\n    <tr>\n      <th>#</th>\n      <th>Text</th>\n      <th>power</th>\n      <th>Motor</th>\n    </tr>\n  </thead>\n  <tbody>\n    {setData.map(this.renderItems)}\n  </tbody>\n    </ReactBootStrap.Table>   \n</div>\n    )\n  }\n} \n\nclass MyButton extends Component{\n  render(){\n    return(\n  <ReactBootStrap.Button variant=\"outline-primary\" value={this.props.value} onClick={this.props.handleClick}>\n    {this.props.text}\n  </ReactBootStrap.Button>\n    )\n  }\n} \n\nexport default AppC;\n  /* <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>*/\n\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from \"./parts/card\"\r\n\r\nclass Test extends Component{\r\n    constructor(props) { \r\n        super(props);\r\n        this.name=\"舊的名字\"; // 加入name\r\n        this.changeName=this.changeName.bind(this); //綁定至自己\r\n      }\r\n      changeName=(newName)=>{ \r\n        this.name=newName;\r\n        console.log(\"hey\"+this.name)//加入此行\r\n      }\r\n      \r\n    render(){\r\n        return( //props\r\n            <React.Fragment>\r\n                <Card id={16} text={\"Fuck\"}/> \r\n                <button onClick={() => this.changeName(\"newShit\")}>{this.name}</button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;","import React, { Component } from 'react';\r\nclass Progress extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={ // 宣告state物件，內包含一個變數percent\r\n      percent:\"30%\" \r\n    }\r\n    this.changePercent=this.changePercent.bind(this);\r\n  }\r\n\r\n  changePercent(){\r\n    this.setState({ percent:\"70%\" })\r\n  }\r\n\r\n  doc(){\r\n    document.getElementById('show-area').innerHTML=\"我被按到了\";\r\n  }\r\n\r\n  \r\n\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n            <div className=\"progress-back\" style={{backgroundColor:\"rgba(0,0,0,0.2)\",width:\"200px\",height:\"7px\",borderRadius:\"10px\",marginTop:\"5px\"}}>\r\n              <div className=\"progress-bar\" style={{backgroundColor:\"#fe5196\",width:this.state.percent,height:\"100%\",borderRadius:\"10px\"}}></div>\r\n            </div>\r\n            <button onClick={this.changePercent}>轉換百分比 </button>\r\n            <button onClick={this.doc}>我被按到了</button>\r\n          </div>\r\n          \r\n        );\r\n    }\r\n}\r\nexport default Progress ;","const testData = [\r\n    {\r\n        \"id\": 1, \"text\": \"DJI\", \"headlessMode\": true,\"brushlessMotor\": false,\"foldable\":true, \"speed\": 100\r\n    },\r\n    {\r\n        \"id\": 2, \"text\": \"HolyStone\", \"headlessMode\": true,\"brushlessMotor\": true,\"foldable\":false, \"speed\": 200\r\n    },\r\n\r\n    {\r\n        \"id\":3, \"text\": \"JJRC\", \"headlessMode\": false,\"brushlessMotor\": false,\"foldable\":false, \"speed\": 300\r\n    },\r\n    {\r\n        \"id\":4, \"text\": \"Potensic\", \"headlessMode\": false,\"brushlessMotor\": true,\"foldable\":false, \"speed\": 400\r\n    },\r\n\r\n\r\n]\r\n\r\nexport default testData","import React, { Component } from 'react';\r\nimport testData from './testData'\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../myApp.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst initialState = {\r\n  passingTags: { //change to a function turns everything false\r\n    headlessMode:{true:false,false:false},\r\n    brushlessMotor:{true:false,false:false},\r\n    foldable:{true:false,false:false},\r\n    speed:{100:false,200:false,300:false,400:false}\r\n   },\r\n   tableData:testData,\r\n}\r\n\r\nclass Filter extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            passingTags: {\r\n             headlessMode:{true:false,false:false},\r\n             brushlessMotor:{true:false,false:false},\r\n             foldable:{true:false,false:false},\r\n             speed:{100:false,200:false,300:false,400:false}\r\n            },\r\n            tableData:testData,\r\n            collected: null\r\n        }\r\n        this.renderItems = this.renderItems.bind(this)\r\n        this.showState = this.showState.bind(this)\r\n        this.multiPropsFilter = this.multiPropsFilter.bind(this)\r\n        this.filteredCollected = this.filteredCollected.bind(this)\r\n        this.reset = this.reset.bind(this)\r\n        this.selectButton = this.selectButton.bind(this)\r\n        this.generateButton = this.generateButton.bind(this)\r\n        this.changeTags = this.changeTags.bind(this)\r\n\r\n    }\r\n\r\n    filteredCollected = () => {\r\n        const collectedTrueKeys = {\r\n            headlessMode:[],\r\n            brushlessMotor:[],\r\n            foldable:[],\r\n            speed:[]\r\n        }\r\n        const { headlessMode, brushlessMotor, foldable,speed} = this.state.passingTags;\r\n        for(let key in headlessMode){\r\n            if(headlessMode[key]){\r\n                collectedTrueKeys.headlessMode.push(key)\r\n            }\r\n        }\r\n\r\n        for(let key in brushlessMotor){\r\n            if(brushlessMotor[key]){\r\n                collectedTrueKeys.brushlessMotor.push(key)\r\n            }\r\n        }\r\n        for(let key in foldable){\r\n            if(foldable[key]){\r\n                collectedTrueKeys.foldable.push(key)\r\n            }\r\n        } \r\n\r\n        for(let key in speed){\r\n          if(speed[key]){\r\n              collectedTrueKeys.speed.push(key)\r\n          }\r\n      }\r\n        //console.log(collectedTrueKeys)\r\n        this.setState({collected:collectedTrueKeys})\r\n        return collectedTrueKeys;\r\n\r\n    }\r\n\r\n    allFilterClickListener = (e, filterProp) => {\r\n        console.log(\"FILTER clicked\", e.target.dataset.name);\r\n        const name = e.target.dataset.name;\r\n        this.setState(prevState => ({\r\n          passingTags: {\r\n            ...prevState.passingTags,\r\n            [filterProp]: {\r\n              ...prevState.passingTags[filterProp],\r\n              [name]: !prevState.passingTags[filterProp][name]\r\n            }\r\n          }\r\n       \r\n        }));\r\n        if(e.target.classList.contains(\"Selected\")){\r\n          e.target.classList.remove(\"Selected\")\r\n        }else{ \r\n           e.target.classList.add(\"Selected\")\r\n          }   \r\n        this.changeTable()  \r\n      };\r\n      \r\n      renderItems(item,i){\r\n     return(\r\n            <tr key={i}>\r\n              <td>{item.text}</td>\r\n              <td>{item.headlessMode.toString()}</td>\r\n              <td>{item.brushlessMotor.toString()}</td>\r\n              <td>{item.foldable.toString()}</td>\r\n            </tr>\r\n          )\r\n        }\r\n\r\n   multiPropsFilter = (products) => {\r\n    const filters = this.filteredCollected();\r\n   // const filters = this.state.collected\r\n    console.log(filters);\r\n    const filterKeys = Object.keys(filters); //keys of passingTags\r\n    console.log(filterKeys.toString())\r\n    return products.filter(product => { //return array of products that passed the function\r\n      return filterKeys.every(key => {\r\n        if (!filters[key].length) return true; //while array is empty\r\n        // Loops again if product[key] is an array (for material attribute).\r\n        if (Array.isArray(product[key])) {  \r\n          return product[key].some(keyEle => filters[key].includes(keyEle)); //if this product property is array\r\n        }\r\n        return filters[key].includes(product[key].toString()); //normal situation\r\n      });\r\n    });\r\n  };\r\n\r\n  searchProducts = () => {\r\n    const filteredProducts = this.multiPropsFilter(testData);\r\n    return filteredProducts.filter(product => {\r\n      return product.name\r\n        .toLowerCase()\r\n        .includes(this.state.passingTags.search.inputTerm);\r\n    });\r\n  };\r\n\r\n  changeTable = () =>{\r\n    this.setState({tableData:this.multiPropsFilter(testData)},  \r\n    () => {console.log(this.state.tableData); this.generateButton()});\r\n  }\r\n\r\n  changeTags = () =>{\r\n    var stateCopy = Object.assign({}, this.state.passingTags);\r\n    for(var a in stateCopy){\r\n      //console.log(stateCopy[a])\r\n      for(var x in stateCopy[a]){\r\n        stateCopy[a][x] = false\r\n        console.log(stateCopy[a][x])\r\n      }\r\n    }\r\n    return stateCopy\r\n  }\r\n   \r\n  reset() {\r\n    this.setState(({\r\n      passingTags: this.changeTags()\r\n    }),()=>{\r\n     /* var x = document.querySelectorAll(\".Selected\")\r\n      console.log( x)\r\n      for (var i = 0; i < x.length; i++) {\r\n        x[i].classList.remove(\"Selected\")\r\n      }*/\r\n      this.changeTable()\r\n    })\r\n  }\r\n\r\n  generateButton = () =>{\r\n    const data = this.selectButton();\r\n    const chosen =  this.filteredCollected()\r\n    for(var x in data){\r\n      document.getElementById(\"group-\"+x).innerHTML =\"\"\r\n    }\r\n    for(var x in data){\r\n       for(var e of data[x]){\r\n        const text = e\r\n        const container = x\r\n        const btn = document.createElement(\"BUTTON\");\r\n        btn.classList.add(\"btn\",\"btn-outline-dark\");\r\n        btn.innerHTML = text;\r\n        btn.dataset.name = e\r\n        btn.onclick = e =>this.allFilterClickListener(e,container)\r\n        document.getElementById(\"group-\"+x).appendChild(btn);\r\n       //console.log(chosen[x])\r\n        if(chosen[x].includes(e.toString())){\r\n          //console.log(\"work\")\r\n          btn.classList.add(\"Selected\")\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  selectButton = () =>{\r\n    const collectedOptions = {\r\n      headlessMode:[],\r\n      brushlessMotor:[],\r\n      foldable:[],\r\n      speed:[]\r\n   }\r\n    \r\n    for(var product of this.state.tableData){\r\n       for( var x in product){\r\n         if(collectedOptions.hasOwnProperty(x)){\r\n            if(!collectedOptions[x].includes(product[x])){\r\n              collectedOptions[x].push(product[x])\r\n            }\r\n         }\r\n         \r\n        //console.log(x)\r\n       }\r\n    }\r\n    for(var x in collectedOptions){\r\n      console.log(collectedOptions[x][0])\r\n      if(typeof collectedOptions[x][0] === 'boolean'){\r\n        collectedOptions[x].sort(function(x, y) {\r\n          // true values first\r\n          return (x === y)? 0 : x? -1 : 1;\r\n          // false values first\r\n          // return (x === y)? 0 : x? 1 : -1;\r\n         });\r\n      }\r\n      if(typeof collectedOptions[x][0] === 'number'){\r\n        collectedOptions[x].sort((a,b)=>a-b)\r\n      }  \r\n    }\r\n    console.log(collectedOptions)\r\n    return collectedOptions\r\n  }\r\n\r\n    showState = () =>{\r\n        console.log(\"HT \"+this.state.passingTags.headlessMode.true)\r\n        console.log(\"HF \"+this.state.passingTags.headlessMode.false)\r\n        console.log(this.filteredCollected())\r\n        console.log(this.multiPropsFilter(testData))\r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n      this.generateButton()\r\n    }\r\n\r\n    render(){  \r\n        return(\r\n            <div>\r\n              <section id=\"intro\">\r\n                 <h1>Drone Filter</h1>\r\n                 <p id=\"description\">A filter for drone customer</p> \r\n              </section>\r\n              <section id=\"buttons\">\r\n                <h3>Search</h3>\r\n                <label for=\"fname\">headlessMode</label>\r\n                <div class=\"btn-group right\" id=\"btn-group0\" role=\"group\" aria-label=\"Basic example\">\r\n                    <button type=\"button\" class=\"btn btn-outline-dark\" onClick={() => this.reset()}>reset</button>\r\n                    <button type=\"button\" class=\"btn btn-outline-dark\">Advanced Mode</button>\r\n                </div> \r\n                <div class=\"btn-group\" id=\"group-headlessMode\" role=\"group\" aria-label=\"Basic example\">\r\n                {/*  <button type=\"button\" class=\"btn btn-outline-dark\" onClick={e =>this.allFilterClickListener(e,\"headlessMode\") } data-name=\"true\" >True</button> */}\r\n                  {/*<button  type=\"button\" class=\"btn btn-outline-dark\" onClick={e =>this.allFilterClickListener(e,\"headlessMode\") } data-name=\"false\" >False</button> */}\r\n                </div> \r\n                            \r\n                <label for=\"fname\">brushlessMotor</label>\r\n                <div class=\"btn-group\" id=\"group-brushlessMotor\"  role=\"group\" aria-label=\"Basic example\">\r\n                {/* <button  type=\"button\" class=\"btn btn-outline-dark\" onClick={e =>this.allFilterClickListener(e,\"brushlessMotor\")} data-name=\"true\">True</button>  \r\n                  <button type=\"button\" class=\"btn btn-outline-dark\" onClick={e =>this.allFilterClickListener(e,\"brushlessMotor\")} data-name=\"false\">False</button> */}\r\n                </div>                   \r\n                <label for=\"fname\">foldable</label>\r\n                <div class=\"btn-group\" id=\"group-foldable\" role=\"group\" aria-label=\"Basic example\">\r\n                  {/*<button type=\"button\" class=\"btn btn-outline-dark\" onClick={e =>this.allFilterClickListener(e,\"foldable\")} data-name=\"true\"> True</button> \r\n                  <button type=\"button\" class=\"btn btn-outline-dark\" onClick={e =>this.allFilterClickListener(e,\"foldable\")} data-name=\"false\">False</button> */}\r\n                 </div>\r\n                 <label for=\"fname\">Speed</label>\r\n                 <div class=\"btn-group\" id=\"group-speed\" role=\"group\" aria-label=\"Basic example\">\r\n                  {/*<button type=\"button\" class=\"btn btn-outline-dark\" onClick={e =>this.allFilterClickListener(e,\"speed\")} data-name=\"100\"> 100</button> \r\n                  <button type=\"button\" class=\"btn btn-outline-dark\" onClick={e =>this.allFilterClickListener(e,\"speed\")} data-name=\"200\">200</button> \r\n                  <button type=\"button\" class=\"btn btn-outline-dark\" onClick={e =>this.allFilterClickListener(e,\"speed\")} data-name=\"300\"> 300</button> \r\n                <button type=\"button\" class=\"btn btn-outline-dark\" onClick={e =>this.allFilterClickListener(e,\"speed\")} data-name=\"400\">400</button> */}\r\n                 </div>\r\n                 <br/>\r\n              {/* <button  onClick={this.filteredCollected}>submit</button> <button onClick={this.showState}>ShowState</button> */}\r\n                {/*<button type=\"button\" class=\"btn btn-outline-dark\" onClick={this.changeTable}>result</button>*/}\r\n               <label>......</label>\r\n              </section>  \r\n              <section id=\"table\">\r\n                <ReactBootStrap.Table striped bordered hover size=\"sm\" id=\"TableContent\">\r\n                <thead>\r\n                <tr>\r\n                   <th>Text</th>\r\n                   <th>headlessMode</th>\r\n                  <th>brushlessMotor</th>\r\n                  <th>foldable</th>\r\n                </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {this.state.tableData.map(this.renderItems)}\r\n               </tbody>\r\n                </ReactBootStrap.Table>\r\n             </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter;\r\n\r\n/*\r\n  <button onClick={() => this.setState({passingTags:{headlessMode:{true:true}}})}>True</button> \r\n                 <button  onClick={() => this.setState({passingTags:{headlessMode:{true:false}}})} >False</button> \r\n*/ ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Test from './test'\nimport Progress from './parts/progress'\nimport Filter from \"./parts/filter\"\n\nconst printMessage=()=>{\n  document.getElementById('show-area').innerHTML=\"我被按到了\";\n}\n\n\nvar name=\"old name\";\n\nReactDOM.render(\n  <React.StrictMode>\n\n  {/*<Test> 在index.js中設定文字</Test>*/} \n   <div id=\"show-area\"></div>\n{ /*<App /> */}\n  {/* <Progress/>*/ }\n  <Filter/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}